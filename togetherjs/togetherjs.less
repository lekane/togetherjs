/* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this file,
* You can obtain one at http://mozilla.org/MPL/2.0/. */

/*Fonts*/
@font-face {
  font-family: openSansRegular;
  src: url('fonts/OpenSans-Regular.ttf');
}

@font-face {
  font-family: openSansLight;
  src: url('fonts/OpenSans-Light.ttf');
}

@font-face {
  font-family: openSansBold;
  src: url('fonts/OpenSans-Bold.ttf');
}

@default-font: openSansLight, Helvetica, 'Helvetica Neue', Arial, sans-serif;

// Size of the buttons (they're square):
@button-size: 40px;
@avatar-size: 32px;
// Note: this is also in ui.js, BUTTON_HEIGHT
// Height of the draggable anchor at the top:
@anchor-height: @button-size / 2;
// Extra padding on the edge of the screen:
@side-padding: 0;
// Background color of most elements:
@background-color: #0095DD;
@window-background-color: #ffffff;
@window-color: #000;
@text-color: #000;

// This is the base z-index of the buttons; items you want below or above
// this can be @z-index+1, etc.
@z-index: 10000;

@import "reset.less";
@import "functions.less";

.togetherjs {

  /* General styles */
  font-family: openSansLight, Helvetica, 'Helvetica Neue', Arial;
  font-size: 14px;
  line-height: 20px;
  color: rgb(51, 51, 51);
  font-weight: normal;

  a {
    color: #0095DD;
    text-decoration: none;
  }

  a:hover {
    color: #0095DD;
    text-decoration: underline;
  }

  p {
    margin: 7px 0 7px 0;
  }

  button, img {
    vertical-align: middle;
  }

  input:focus {
    outline: none;
  }

  button::-moz-focus-inner, input::-moz-focus-inner { // Inner padding and border oddities in FF3/4
    padding: 0;
    border: 0;
  }

  .togetherjs-right {
    float:right;
  }

}

.togetherjs-alt-text {
  vertical-align:-2px;
}

/*FIX ME something weird is going on here. the avatar has no paddingTop only on Safari*/
/*button#togetherjs-profile-button.togetherjs-button {
  padding:10px 0px !important;
}*/

/* Arrows for pointing */

.togetherjs-arrow {
  position: absolute;
  border: 2px solid #f00;
  z-index: @z-index + 10;
  padding: 0;
  margin: 0;
  .transform-origin(top left);
}

/* Shared cursors */

.togetherjs-cursor svg {
  -webkit-filter: drop-shadow(1px 3px 2px rgba(0,0,0,0.3));
  -webkit-transform: rotate(-10deg);
}

.togetherjs-cursor-img {
  position: relative;
  top: 0;
}

.togetherjs-cursor img {
  width: 20px;
  -webkit-filter: drop-shadow( 0px 2px 1px rgba(0,0,0,0.2) );
  /*FIX ME, moz filter not working...*/
  -moz-filter: drop-shadow( 0px 2px 1px rgba(0,0,0,0.2) );
          filter: drop-shadow( 0px 2px 1px rgba(0,0,0,0.2) );
}

.togetherjs-cursor {
  position: absolute;
  z-index: @z-index - 1;
  font-size: 28px;
  font-weight: bolder;
  /* This magic CSS rule makes this element basically invisible to clicks/etc:
  (good on all but IE: http://caniuse.com/pointer-events */
  pointer-events: none;
  &:hover{
    cursor:pointer;
  }

  /*FIXME: maybe these should use position: fixed so the cursor
  stays stuck to the top of the screen until the appropriate time
  (when .togetherjs-scrolled-above/below is removed)?*/
  &.togetherjs-scrolled-above {
    position: fixed;
    svg {
      -webkit-transition-duration: 0.8s;
      -webkit-transition-property: -webkit-transform;
      -webkit-transform: rotate(20deg);
      transition-duration: 0.8s;
      transition-property: transform;
      transform: rotate(20deg);
    }
    .togetherjs-cursor-down {
      display: none;
    }
  }

  &.togetherjs-scrolled-below {
    position: fixed;
    svg {
      -webkit-transition-duration: 0.8s;
      -webkit-transition-property: -webkit-transform;
      -webkit-transform: rotate(-150deg);
      transition-duration: 0.8s;
      transition-property: transform;
      transform: rotate(-150deg);
    }
    .togetherjs-cursor-up {
      display: none;
    }
  }

  &.togetherjs-scrolled-normal {
    svg {
      -webkit-transition-duration: 0.8s;
      -webkit-transition-property: -webkit-transform;
      -webkit-transform: rotate(-10deg);
      transition-duration: 0.8s;
      transition-property: transform;
      transform: rotate(-10deg);
    }
    .togetherjs-cursor-up, .togetherjs-cursor-down {
      display: none;
    }
  }

  .togetherjs-cursor-container {
    opacity:0.9;
    white-space: nowrap;
    font-family: @default-font;
    font-size: 40%;
    position: relative;
    top: 5px;
    left: 15px;
    padding: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 1px rgba(0,0,0,0.2);
    border: 1px solid rgba(0,0,0,0.2);
    -moz-box-shadow:    0px 2px 4px 0px rgba(0,0,0,0.50);
    -webkit-box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.50);
    box-shadow:         0px 2px 4px 0px rgba(0,0,0,0.50);
  }
}

@start-click: 10px;
@end-click: 40px;

.togetherjs-click {
  position: absolute;
  z-index: @z-index - 2;
  pointer-events: none;
  width: @start-click;
  height: @start-click;
  margin: (-@start-click/2) 0 0 (-@start-click/2);
  border-radius: @start-click/2;
  border: 3px solid rgba(288, 58, 41, 1);
  .transition(~"width 2s, height 2s, margin 2s, border 2s");

  // This class is immediately applied for the purpose of transitioning:
  &.togetherjs-clicking {
    width: @end-click;
    height: @end-click;
    margin: (-@end-click/2) 0 0 (-@end-click/2);
    border-radius: @end-click/2;
    border: 3px solid rgba(0, 0, 0, 0);
  }
}

#togetherjs-starter .togetherjs-running {
  background-color: #f00;
  color: #fff;
  border-radius: 4px;
  border: 3px outset #d00;
  /*FIXME: add gradient*/
}

/* Animations */

.togetherjs-focus {
  position: absolute;
  pointer-events: none;
  z-index: @z-index - 1;
  opacity: 0.4;
  border: 3px solid;
  margin: -3px; // border should be outside the specified box
}

.togetherjs-only-mobile {
  display: none;
}

@media screen and (max-device-width: 480px) {
  @import "mobile.less";
}

/* We set this class on the <body> element when that last media query won't work
   but we detect in Javascript that the client should be treated as mobile */
.togetherjs-mobile-browser {
  @import "mobile.less";
}
